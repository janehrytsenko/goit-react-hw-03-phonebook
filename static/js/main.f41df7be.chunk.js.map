{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","uuidv4","handleSubmit","preventDefault","props","onSubmit","contactId","className","s","form","this","type","id","onChange","placeholder","nameInput","numberInput","button","Component","ContactList","contacts","onDelete","map","item","onClick","Filter","App","filter","addContact","contact","find","toLowerCase","alert","trim","test","console","log","changeFilter","e","deleteContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","nextContacts","setItem","stringify","normalizedFilter","filteredContacts","includes","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f41df7be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"contacts\":\"App_contacts__11wLB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"name\":\"ContactForm_name__1yuhS\",\"number\":\"ContactForm_number__2Czl4\",\"nameInput\":\"ContactForm_nameInput__1yxA2\",\"numberInput\":\"ContactForm_numberInput__CBZzH\",\"button\":\"ContactForm_button__1MLZK\"};","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css'\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: ''\n    }\n    \n    static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n    handleChange = event => {\n        const { name, value } = event.currentTarget;\n        this.setState({ [name]: value, id: uuidv4() })\n    };\n    \n    handleSubmit = event => {\n        event.preventDefault();\n    \n        this.props.onSubmit(this.state);\n        \n        this.setState({ name: '' , number: ''});\n  }\n\n  contactId = uuidv4();\n\n    render() {\n        return (\n            <form className={s.form} onSubmit={this.handleSubmit}>\n                <label className={s.name}>\n                    Name\n          <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={this.state.name}\n                        id={this.contactId}\n                        onChange={this.handleChange}\n                        placeholder=\"Jack Johnson\"\n                        className={s.nameInput}\n                    />\n                </label>\n                <label className={s.number}>\n                    Number\n          <input\n                        type=\"text\"\n                        name=\"number\"\n                        value={this.state.number}\n                        onChange={this.handleChange}\n                        placeholder=\"111-11-11\"\n                        className={s.numberInput}\n\n                    />\n                </label>\n                <button type=\"submit\" className={s.button}>ADD CONTACT</button>\n                \n            </form>\n        )\n    }\n}\n\nexport default ContactForm;","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css'\n\nfunction ContactList({ contacts, onDelete }) {\n    return (\n        <ul>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <li key={id} className={s.item}>\n              <p>\n                {name}: {number}\n              </p>\n              <button type=\"button\" className={s.button} onClick={() => onDelete(id)}>DELETE</button>\n            </li>\n          )})}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm'\nimport ContactList from './components/ContactList'\nimport Filter from './components/Filter'\nimport s from './App.module.css'\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: ''\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase())\n    )\n    {\n      alert(`${name} is already in contacts`);\n    } \n    else if\n      (contacts.find(\n        contact => contact.number === number)\n    )\n    {\n      alert(`${number} is already in contacts`);\n    }\n    else if\n      (name.trim() === '' || number.trim() === '')\n    {\n      alert(\"Enter the contact's name and number phone!\");\n    }\n    else if\n      (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number))\n    {\n      alert('Enter the correct number phone!');\n    }\n    else\n    {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n\n    console.log(contacts);\n    \n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase()\n    const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact}/>\n        <h2 className={s.contacts}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter}/>\n        <ContactList contacts={filteredContacts} onDelete={this.deleteContact}/>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};"],"sourceRoot":""}